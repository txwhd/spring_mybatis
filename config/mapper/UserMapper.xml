<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.mapper.UserMapper">
    <!--
    id 标识用户映射的sql  statement id
    #{} 占位符
    ${} 拼接符 可能会造成sql注入

    mapper 代理开发规范
    1.mapper中xml的namespace等于mapper接口的地址
    2.mapper.java中接口的方法名等于xml中的statement中的id相同
    3.mapper.java中接口中参数的类型等于 parameterType的类型
    4.mapper.java中接口的返回值类型等于resultType的类型
    -->

    <!--
    resultMap
    id: resultMap的唯一标识
    type：最终映射的java类型 可用别名
    -->

    <resultMap id="userResultMap" type="com.company.po.User">
        <!--
         id: 表示查询结果集中的唯一标识
         result： 其他属性名
        -->
        <id column="id_" property="id"></id>
        <result column="username" property="name"></result>

    </resultMap>

    <select id="findUserById" parameterType="int" resultType="com.company.po.User">
        SELECT * FROM `user` WHERE id = #{id}
    </select>

    <!-- 若resultmap在其他mapper里则应该namespace.resultmap名字-->

    <select id="findUserByIdMap" parameterType="int" resultMap="userResultMap">
        SELECT id id_,`name` username FROM `user` WHERE id = #{id}
    </select>


    <select id="findUserByName" parameterType="String" resultType="com.company.po.User">
        SELECT * FROM `user` WHERE NAME LIKE '%${value}%'

    </select>

    <!--

     LAST_INSERT_ID() 得到刚刚插入的主键，适用于自增主键
     keyProperty 将查询到的主键设置到user的属性中
     resultType  返回结果类型
     order 执行顺序

     UUID(); 非自增 ，string主键

     -->
    <insert id="insertUser" parameterType="com.company.po.User">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID();

        </selectKey>

        INSERT INTO `user`(`name`,address,birsday) VALUES(#{name},#{address},#{birsday})

    </insert>

    <!-- 删除方法 -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM `user` WHERE id = #{id}
    </delete>
    <!-- 更新方法-->
    <update id="updateUser" parameterType="com.company.po.User">
        UPDATE `user` SET `name` = #{name},address = #{address},birsday = #{birsday} WHERE id = #{id}
    </update>
</mapper>